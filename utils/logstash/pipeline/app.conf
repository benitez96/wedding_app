input {
  file {
    path => "/var/log/caddy/access.log"
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb-caddy"
    codec => json { }
  }
}

filter {
  # Agregar campos útiles para el análisis
  mutate {
    add_field => { "service" => "caddy" }
    add_field => { "environment" => "production" }
  }
  
  # Parsear la URL para extraer información útil
  if [request] {
    grok {
      match => { "request" => "%{WORD:method} %{URIPATH:path} %{DATA:http_version}" }
    }
  }
  
  # Extraer información del User-Agent
  if [user_agent] {
    useragent {
      source => "user_agent"
      target => "user_agent_info"
    }
  }
  
  # Categorizar las rutas
  if [path] {
    mutate {
      add_field => {
        "route_category" => "%{[path]}"
      }
    }
    
    # Categorizar rutas específicas
    if [path] =~ "^/api/" {
      mutate {
        replace => { "route_category" => "api" }
      }
    } else if [path] =~ "^/backoffice/" {
      mutate {
        replace => { "route_category" => "admin" }
      }
    } else if [path] =~ "^/r/" {
      mutate {
        replace => { "route_category" => "invitation" }
      }
    } else if [path] =~ "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$" {
      mutate {
        replace => { "route_category" => "static" }
      }
    } else {
      mutate {
        replace => { "route_category" => "page" }
      }
    }
  }
  
  # Agregar timestamp si no existe
  if ![timestamp] {
    date {
      match => [ "ts", "ISO8601" ]
      target => "timestamp"
      timezone => "America/Argentina/Buenos_Aires"
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "caddy-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}
